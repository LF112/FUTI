#  _     _____ _ _ ____    _   _ _____ _____
# | |   |  ___/ / |___   |  | | ____|_   _|
# | |   | |_  | | | __) | |  | |  _|   | |
# | |___|  _| | | |/ __/ _| |  | |___  | |
# |_____|_|   |_|_|_____(_)_| _|_____| |_|

name: Update Website CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  pushWebsite:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: 使用 Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: 获取 yarn 缓存目录路径
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: 安装依赖
        run: yarn

      - name: Build dist
        run: yarn build

      - name: 压缩 HMTL
        run: |
          echo '正在压缩文件...';
          yarn add html-minifier
          node ./script/compressionHtml.js
          echo '压缩完毕！';

      - name: 更新 LF112.NET 站点
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist
          remote: /opt/1panel/apps/openresty/openresty/www/sites/LF112/index
          host: ${{ secrets.SERVERIP }}
          port: ${{ secrets.SERVERPORT }}
          username: ${{ secrets.SERVERUSERNAME }}
          privateKey: ${{ secrets.SERVER_SSH_KEY }}

      - name: 更新 FUTIWOLF.COM 站点
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist
          remote: /opt/1panel/apps/openresty/openresty/www/sites/futiwolf/index
          host: ${{ secrets.SERVERIP }}
          port: ${{ secrets.SERVERPORT }}
          username: ${{ secrets.SERVERUSERNAME }}
          privateKey: ${{ secrets.SERVER_SSH_KEY }}
  uploadCDN:
    name: '刷新 CDN'
    runs-on: ubuntu-latest
    needs: [pushWebsite]

    steps:
      - uses: actions/checkout@v2

      - name: 使用 Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: 获取 yarn 缓存目录路径
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: 安装依赖
        run: yarn add tencentcloud-sdk-nodejs

      - name: 刷新
        run: node ./script/updateCDN.js secretid="${{ secrets.QCSDK_ID }}" secretkey="${{ secrets.QCSDK_SECRETS }}"
