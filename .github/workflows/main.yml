#  _     _____ _ _ ____    _   _ _____ _____
# | |   |  ___/ / |___   |  | | ____|_   _|
# | |   | |_  | | | __) | |  | |  _|   | |
# | |___|  _| | | |/ __/ _| |  | |___  | |
# |_____|_|   |_|_|_____(_)_| _|_____| |_|

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  updateVersion:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: 使用 Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: 检查 & 更新
        run: |
          echo "---------- MAIN ----------"
          echo ' 正在安装依赖...';
          npm i child_process;
          echo ' 正在更新版本号...';
          node autoUpdateVersion.js COMMIT="$(git rev-parse --short HEAD)";
          echo 'Auto Update Version DONE!';

      - name: 获取 GIT 权限
        run: |
          go env -w GOPRIVATE="github.com/fuicou"
          git config --global url."https://fuicou:${{ secrets.GH_TOKEN }}@github.com".insteadOf "https://github.com"
          go get -v -t -d ./...
          git config --global user.email "lf@furry.icu"
          git config --global user.name "fuicou"

      - name: 推送
        run: |
          sreid=$(git rev-parse --short HEAD)
          rename=$(git log --pretty=format:"%an" $reid -1)
          BGV=$(node -e "console.log(require('./package.json').version.split('-')[0])");
          git add . && git commit -m "🚀 V$BGV ↑ [$rename - $sreid]" && git push -u;
          echo ' 更新成功！'; \
          echo "---------- MAIN ----------"
          echo ' 作业完毕。'
  pushWebsite:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: 使用 Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: 获取 yarn 缓存目录路径
         id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: 安装依赖
         run: yarn

      - name: Build dist
        run: yarn build

      - name: 上传
         uses: garygrossgarten/github-action-scp@release
        with:
          local: dist
          remote: /LF/site/LF/index
          host: ${{ secrets.SERVERIP }}
          port: ${{ secrets.SERVERPORT }}
          username: ${{ secrets.SERVERUSERNAME }}
          privateKey: ${{ secrets.SERVER_SSH_KEY }}
